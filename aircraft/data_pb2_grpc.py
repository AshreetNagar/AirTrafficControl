# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import data_pb2 as data__pb2


class validatorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AcGetList = channel.unary_unary(
                '/validator/AcGetList',
                request_serializer=data__pb2.ACListReq.SerializeToString,
                response_deserializer=data__pb2.AcListResp.FromString,
                )
        self.AcUpdateVel = channel.unary_unary(
                '/validator/AcUpdateVel',
                request_serializer=data__pb2.AcUpdateReq.SerializeToString,
                response_deserializer=data__pb2.AcUpdateResp.FromString,
                )
        self.AcAdd = channel.unary_unary(
                '/validator/AcAdd',
                request_serializer=data__pb2.ACData.SerializeToString,
                response_deserializer=data__pb2.AcAddResp.FromString,
                )
        self.VisiblityGet = channel.unary_unary(
                '/validator/VisiblityGet',
                request_serializer=data__pb2.VisiblityGetReq.SerializeToString,
                response_deserializer=data__pb2.VisiblityGetResp.FromString,
                )
        self.AcGet = channel.unary_unary(
                '/validator/AcGet',
                request_serializer=data__pb2.AcGetReq.SerializeToString,
                response_deserializer=data__pb2.ACData.FromString,
                )


class validatorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AcGetList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcUpdateVel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcAdd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VisiblityGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_validatorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AcGetList': grpc.unary_unary_rpc_method_handler(
                    servicer.AcGetList,
                    request_deserializer=data__pb2.ACListReq.FromString,
                    response_serializer=data__pb2.AcListResp.SerializeToString,
            ),
            'AcUpdateVel': grpc.unary_unary_rpc_method_handler(
                    servicer.AcUpdateVel,
                    request_deserializer=data__pb2.AcUpdateReq.FromString,
                    response_serializer=data__pb2.AcUpdateResp.SerializeToString,
            ),
            'AcAdd': grpc.unary_unary_rpc_method_handler(
                    servicer.AcAdd,
                    request_deserializer=data__pb2.ACData.FromString,
                    response_serializer=data__pb2.AcAddResp.SerializeToString,
            ),
            'VisiblityGet': grpc.unary_unary_rpc_method_handler(
                    servicer.VisiblityGet,
                    request_deserializer=data__pb2.VisiblityGetReq.FromString,
                    response_serializer=data__pb2.VisiblityGetResp.SerializeToString,
            ),
            'AcGet': grpc.unary_unary_rpc_method_handler(
                    servicer.AcGet,
                    request_deserializer=data__pb2.AcGetReq.FromString,
                    response_serializer=data__pb2.ACData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'validator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class validator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AcGetList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/validator/AcGetList',
            data__pb2.ACListReq.SerializeToString,
            data__pb2.AcListResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcUpdateVel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/validator/AcUpdateVel',
            data__pb2.AcUpdateReq.SerializeToString,
            data__pb2.AcUpdateResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcAdd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/validator/AcAdd',
            data__pb2.ACData.SerializeToString,
            data__pb2.AcAddResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def VisiblityGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/validator/VisiblityGet',
            data__pb2.VisiblityGetReq.SerializeToString,
            data__pb2.VisiblityGetResp.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/validator/AcGet',
            data__pb2.AcGetReq.SerializeToString,
            data__pb2.ACData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
